@model MooseMus.Models.ViewModels.TeacherAddProjectPartViewModel
@{
    ViewBag.Title = "Edit Project Part";
}
@Model.partName
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("updateProjectPart", "Teacher", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Edit Project Part</h4> 
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.partName, "Title", new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.partName, new { @Value= @Model.partName, @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.partName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.partDescription, "Description", new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.partDescription, new { @Value = @Model.partDescription, @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.partDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.input, "Input", new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(m => m.input, new { @Value = @Model.input, @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.input, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.output, "Output", new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(m => m.output, new { @Value = @Model.output, @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.output, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.value, "Value in %", new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.ValidationMessageFor(m => m.value, "", new { @Value = @Model.value, @class = "text-danger" })
                        @Html.EditorFor(i => i.value, new { htmlAttributes = new { type = "number", min = 0, max = 100 } })
                    </div>
                </div>
                <input type="hidden" name="courseID" value=@Model.courseID>
                <input type="hidden" name="ID" value=@Model.ID>
                <input type="hidden" name="projectID" value=@Model.projectID>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Confirm changes" class="btn btn-default pull-right" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

